(function() {
    const startButton = document.createElement('button');
    const stopButton = document.createElement('button');
    const buttonContainer = document.createElement('div');

    buttonContainer.style.position = 'fixed';
    buttonContainer.style.bottom = '20px'; 
    buttonContainer.style.right = '30px';  
    buttonContainer.style.zIndex = '9999'; 

    startButton.innerText = 'Start';
    startButton.style.marginRight = '10px';
    startButton.style.padding = '6px 12px';  
    startButton.style.backgroundColor = '#4CAF50';
    startButton.style.color = '#fff';
    startButton.style.border = 'none';
    startButton.style.borderRadius = '4px';
    startButton.style.cursor = 'pointer';

    stopButton.innerText = 'Stop';
    stopButton.style.padding = '6px 12px'; 
    stopButton.style.backgroundColor = '#f44336';
    stopButton.style.color = '#fff';
    stopButton.style.border = 'none';
    stopButton.style.borderRadius = '4px';
    stopButton.style.cursor = 'pointer';

    buttonContainer.appendChild(startButton);
    buttonContainer.appendChild(stopButton);
    document.body.appendChild(buttonContainer);

    let intervalId = null;
    let waitingForPopup = false;

    function clickHandler() {
        const buttons = document.querySelectorAll('button');
        let sendOTPButton = null;
        let okButton = null;
        let otpInput = document.querySelector('input[type="text"][name="otp"]');
        let resendOTPButton = document.querySelector('button[name="resendOtp"]');

        buttons.forEach(button => {
            if (button.innerText && button.innerText.trim() === "Send OTP") {
                sendOTPButton = button;
            }
            if (button.innerText && button.innerText.trim() === "OK") {
                okButton = button;
            }
        });

        // Check if OTP input or Resend OTP button is visible
        if (otpInput || resendOTPButton) {
            console.log("OTP field or Resend OTP button is visible. Stopping the process.");
            clearInterval(intervalId);
            intervalId = null;
        } else if (waitingForPopup && okButton) {
            console.log("Clicking OK button to close popup...");
            setTimeout(() => {
                okButton.click();
                console.log("OK button clicked.");
                waitingForPopup = false;
                // After closing popup, click Send OTP again
                setTimeout(() => {
                    if (sendOTPButton) {
                        sendOTPButton.click();
                        console.log("Send OTP button clicked.");
                    }
                }, 1000); // Reduced wait time for quicker actions
            }, 2000);
        } else if (!waitingForPopup && sendOTPButton) {
            console.log("Clicking Send OTP button...");
            setTimeout(() => {
                sendOTPButton.click();
                console.log("Send OTP button clicked.");
                waitingForPopup = true;
            }, 1000);  // Reduced wait time for quicker actions
        } else {
            console.log("Waiting for the next check...");
        }
    }

    startButton.addEventListener('click', function() {
        if (!intervalId) {
            console.log("Starting the process...");
            intervalId = setInterval(clickHandler, 5000);
        } else {
            console.log("Process is already running.");
        }
    });

    stopButton.addEventListener('click', function() {
        if (intervalId) {
            console.log("Stopping the process...");
            clearInterval(intervalId);
            intervalId = null;
        } else {
            console.log("Process is not running.");
        }
    });
})();
